%YAML:1.0

#common parameters
imu_topic: "/imu0"
image_topic: "/cam0/image_raw"
output_path: "/home/tong/output/"

#camera calibration 
model_type: MEI
camera_name: camera
image_width: 752
image_height: 480
mirror_parameters:
   xi: 1.8162816904697401e+00
distortion_parameters:
   k1: -5.2280966938007600e-02
   k2: 5.3709501857137787e-01
   p1: -3.5867321540317175e-04
   p2: -2.5596838136604099e-04
projection_parameters:
   gamma1: 1.3217792921289520e+03
   gamma2: 1.3237233061481388e+03
   u0: 3.5263371410695777e+02
   v0: 2.2968716966022129e+02


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam

extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: 
    [ 9.9991036582958637e-01, 1.1948793070511360e-02,-6.0404180899061577e-03,
     -1.1931508793228868e-02, 9.9992464233075007e-01, 2.8894216789357523e-03,
      6.0744879998126597e-03,-2.8170913864660921e-03, 9.9997758204454790e-01]
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [3.8836925129605959e-02, -4.7406823518464092e-03, -3.5997702822723361e-03] #front[-3.739, 0.000, 0.840]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10               # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.1
acc_x_std_dev: 0.1
acc_y_std_dev: 0.1
acc_z_std_dev: 0.1
gyr_n: 0.01         # gyroscope measurement noise standard deviation.    # x,y~=0.018, z~=0.002
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.0001     # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81     # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
